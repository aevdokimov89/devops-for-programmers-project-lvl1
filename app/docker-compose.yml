# Версия схемы, которую мы используем.
# Зависит от установленной версии docker
# https://docs.docker.com/compose/compose-file/
version: "3"
# Определяем список сервисов — services
# Эти сервисы будут частью нашего приложения
services:

  app: # Имя сервиса
    build:
      # Контекст для сборки образа,
      # в данном случае, текущая директория
      context: .
      # Имя докерфайла из которого будет собран образ
      dockerfile: Dockerfile.production
      # Команда, которая будет выполнена после старта сервиса
    command: npm test
    image: aevdokimov89/devops-for-programmers-project-lvl1:latest
    ports: # Проброс портов
     - "8080:8080"
    # Перечисляем тома (volumes)
    # Они будут подключены к файловой системе сервиса
    # Например, всё что находится в . мы увидим в директории /app
    volumes:
      - ".:/app"
     # - "/tmp:/tmp"
    # Сервис будет запущен, только после старта db
    depends_on:
     - db
 # redis:
     #image: aevdokimov89/devops-for-programmers-project-lvl1:app
  db:
     image: postgres:latest
     environment:
      #POSTGRES_HOST_AUTH_METHOD: trust
      #DATABASE_HOST: db
      #DATABASE_NAME: postgres
      #DATABSE_USERNAME: postgres
      POSTGRES_PASSWORD: password
     #volumes: 
      #- ./pg_project:/var/lib/postgresql/data
     ports:
      - ${POSTGRES_PORT:-5432}:5432 
    # POSTGRES_PASSWORD: password
    # Имя образа. Здесь мы используем базу данных Postgres
   #image: postgres:latest
    #environment: # А так задаются переменные окружения
     # POSTGRES_PASSWORD: password
    #volumes:
    # - pgdata:/var/lib/postgresql/data

